stages:
  - build
  - deploy


build master:
  stage: build
  image: docker:19.03.9-dind
  services:
    - docker:19.03.9-dind
  before_script:
    - GLIBC_VER=2.31-r0
    - apk --no-cache add \
          binutils \
          curl \
      && curl -sL https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub -o /etc/apk/keys/sgerrand.rsa.pub \
      && curl -sLO https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VER}/glibc-${GLIBC_VER}.apk \
      && curl -sLO https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VER}/glibc-bin-${GLIBC_VER}.apk \
      && apk add --no-cache \
          glibc-${GLIBC_VER}.apk \
          glibc-bin-${GLIBC_VER}.apk \
      && curl -sL https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip \
      && unzip awscliv2.zip \
      && aws/install \
      && rm -rf \
          awscliv2.zip \
          aws \
          /usr/local/aws-cli/v2/*/dist/aws_completer \
          /usr/local/aws-cli/v2/*/dist/awscli/data/ac.index \
          /usr/local/aws-cli/v2/*/dist/awscli/examples \
      && apk --no-cache del \
          binutils \
          curl \
      && rm glibc-${GLIBC_VER}.apk \
      && rm glibc-bin-${GLIBC_VER}.apk \
      && rm -rf /var/cache/apk/*
    - aws --version
  script:
    - export DOCKER_HOST=$DOCKER_PORT
#    - $(aws ecr get-login )
    - aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin $REPOSITORY_URL
    - docker build -t $REPOSITORY_URL:CI_COMMIT_SHA .
    - docker push $REPOSITORY_URL:$CI_COMMIT_SHA
  only:
    - master
  tags:
    - docker

# deploy master:
#   stage: deploy
#   only:
#     - master
#   tags: 
#     - labrifqi
#   script:
#     - cd /home/ubuntu/Personal-Website
#     - sudo git pull
#   environment:
#     name: dev
#     url: https://rifqi.xyz
  
